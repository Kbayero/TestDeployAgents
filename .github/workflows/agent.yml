name: Agent Build
on:
  push:
    tags: [ 'v*' ]
    branches: [ "main", "qa", "rc" ]
    paths: 
      - 'agent/**'
      - 'version.yml'
      - '.github/workflows/agent.yml'
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: YORJANDER
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and sign agent services
        id: set-env
        run: |
          if ("${{ github.event_name }}" -eq 'push' -and "${{ github.ref_name }}" -eq 'main') {
            Write-Host "Agent Deployment to DEV"
            $env:DEPLOY_ENV = "dev"
          } elseif ("${{ github.event_name }}" -eq 'push' -and "${{ github.ref_name }}" -eq 'qa' ) {
            Write-Host "Agent Deployment to QA"
            $env:DEPLOY_ENV = "qa"
          } elseif ("${{ github.event_name }}" -eq 'push' -and "${{ github.ref_name }}" -eq 'rc' ) {
            Write-Host "Agent Deployment to RC"
            $env:DEPLOY_ENV = "rc"
          } elseif ("${{ github.event_name }}" -eq 'push' -and "${{ github.ref }}" -match '^refs/tags/v') {
            Write-Host "Agent Deployment to RELEASE"
            $env:DEPLOY_ENV = "release"
          }

          cd ${{ github.workspace }}/agent/agent/configuration; (Get-Content const.go) | Foreach-Object { $_ -replace 'const REPLACE_KEY string = ""', 'const REPLACE_KEY string = "${{ secrets.AGENT_SECRET_PREFIX }}"' } | Set-Content const.go
          
          $env:GOOS = "linux"
          $env:GOARCH = "amd64"
          cd ${{ github.workspace }}/agent/agent; go build -o utmstack_agent_service -v .
          cd ${{ github.workspace }}/agent/installer; go build -o utmstack_agent_installer -v .
          cd ${{ github.workspace }}/agent/redline; go build -o utmstack_redline_service -v .
          cd ${{ github.workspace }}/agent/updater; go build -o utmstack_updater_service -v .
          
          $env:GOOS = "windows"
          cd ${{ github.workspace }}/agent/agent; go build -o utmstack_agent_service.exe -v .
          cd ${{ github.workspace }}/agent/installer; go build -o utmstack_agent_installer.exe -v .
          cd ${{ github.workspace }}/agent/redline; go build -o utmstack_redline_service.exe -v .
          cd ${{ github.workspace }}/agent/updater; go build -o utmstack_updater_service.exe -v .
          
          $env:GCP_KEY = '${{ secrets.GCP_KEY }}'
          cd ${{ github.workspace }}/.github/scripts; 'C:\Program Files\Python312\python.exe' agent-deploy.py  $env:DEPLOY_ENV
