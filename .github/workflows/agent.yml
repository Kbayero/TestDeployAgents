name: Agent Build
on:
  push:
    tags: [ 'v*' ]
    branches: [ "main", "qa", "rc" ]
    paths: 
      - 'agent/**'
      - 'version.yml'

jobs:
  build:
    name: Build
    runs-on: YORJANDER
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Determine Build Environment
        id: set-env
        run: |
          if ("${{ github.event_name }}" -eq 'push' -and "${{ github.ref_name }}" -eq 'main') {
            Write-Host "Agent Deployment to DEV"
            $env:DEPLOY_ENV = 'dev'
          } elseif ("${{ github.event_name }}" -eq 'push' -and "${{ github.ref_name }}" -eq 'qa' ) {
            Write-Host "Agent Deployment to QA"
            $env:DEPLOY_ENV = 'qa'
          } elseif ("${{ github.event_name }}" -eq 'push' -and "${{ github.ref_name }}" -eq 'rc' ) {
            Write-Host "Agent Deployment to RC"
            $env:DEPLOY_ENV = 'rc'
          } elseif ("${{ github.event_name }}" -eq 'push' -and "${{ github.ref }}" -match '^refs/tags/v') {
            Write-Host "Agent Deployment to RELEASE"
            $env:DEPLOY_ENV = 'release'
          }
      
      - name: Build for Linux
        working-directory: ./agent
        env:
          GOOS: linux
          GOARCH: amd64
        run: |
          cd ${{ github.workspace }}/agent/agent; go build -o utmstack_agent_service -v .
          cd ${{ github.workspace }}/agent/installer; go build -o utmstack_agent_installer -v .
          cd ${{ github.workspace }}/agent/redline; go build -o utmstack_redline_service -v .
          cd ${{ github.workspace }}/agent/updater; go build -o utmstack_updater_service -v .

      - name: Build and sign for Windows
        working-directory: ./agent
        env:
          GOOS: windows
          GOARCH: amd64
        run: |
          Write-Host "KEY: ${{ secrets.SIGN_KEY }}, CERT: ${{ env.SIGN_CERT }}, CONTAINER: ${{ secrets.SIGN_CONTAINER }}"
          cd ${{ github.workspace }}/agent/agent; go build -o utmstack_agent_service.exe -v .
          cd ${{ github.workspace }}/agent/installer; go build -o utmstack_agent_installer.exe -v .
          cd ${{ github.workspace }}/agent/redline; go build -o utmstack_redline_service.exe -v .
          cd ${{ github.workspace }}/agent/updater; go build -o utmstack_updater_service.exe -v .

      - name: Run Python script for deploy to Google
        working-directory: ".github/scripts"
        env:
          GCP_KEY: ${{ secrets.GCP_KEY }}
        run: |
          Write-Host "Deploying Agent to $env:DEPLOY_ENV"
          python .github/scripts/agent-deploy.py  $env:DEPLOY_ENV
